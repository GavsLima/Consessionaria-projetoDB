#DROP DATABASE concessionaria;

CREATE SCHEMA concessionaria; 
USE concessionaria ;

CREATE TABLE MODELO (
  CodModelo INT NOT NULL AUTO_INCREMENT,
  Detalhes VARCHAR(45) NOT NULL,
  Familia VARCHAR(45) NOT NULL,
  Combustivel VARCHAR(45) NOT NULL,
  Cor VARCHAR(45) NOT NULL,
  PRIMARY KEY (CodModelo));

CREATE TABLE  ENDERECO (
  CodEndereco INT NOT NULL AUTO_INCREMENT,
  Estado VARCHAR(45) NOT NULL,
  Logradouro VARCHAR(45) NOT NULL,
  Cidade VARCHAR(45) NOT NULL,
  Bairro VARCHAR(45) NOT NULL,
  Numero VARCHAR(5) NOT NULL,
  Complemento VARCHAR(45) NULL,
  PRIMARY KEY (CodEndereco));

CREATE TABLE PESSOA (
  CodPessoa INT NOT NULL AUTO_INCREMENT,
  Nome VARCHAR(45) NOT NULL,
  Tipo INT(1) NOT NULL,
  Telefone VARCHAR(45) NULL,
  Email VARCHAR(45) NULL,
  Endereco INT NOT NULL,
  PRIMARY KEY (CodPessoa),
    FOREIGN KEY (Endereco)
    REFERENCES Endereco (CodEndereco)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE VEICULO (
  CodVeiculo INT NOT NULL AUTO_INCREMENT,
  Chassi VARCHAR(17) NOT NULL,
  Placa VARCHAR(7) NOT NULL,
  Modelo INT NOT NULL,
  Proprietario INT,
  Valor DOUBLE NOT NULL,
  PRIMARY KEY (CodVeiculo),
    FOREIGN KEY (Modelo)
    REFERENCES Modelo (CodModelo)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Proprietario)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE PESSOA_FISICA(
  Cpf VARCHAR(11) NOT NULL,
  Rg INT NOT NULL UNIQUE,
  DataNasc DATE NOT NULL,
  PESSOA INT NOT NULL,
  PRIMARY KEY (Cpf),
  FOREIGN KEY (PESSOA)
  REFERENCES PESSOA (CODPESSOA)
  ON DELETE CASCADE
  ON UPDATE CASCADE);

CREATE TABLE PESSOA_JURIDICA (
  Cnpj VARCHAR(14) NOT NULL UNIQUE,
  RazaoSocial VARCHAR(45) NOT NULL,
  InscriçãoEstadual VARCHAR(45) NOT NULL,
  PESSOA INT NOT NULL,
  PRIMARY KEY (Cnpj),
  FOREIGN KEY (PESSOA)
  REFERENCES PESSOA (CODPESSOA)
  ON DELETE CASCADE
  ON UPDATE CASCADE);

CREATE TABLE FILIAL (
  CodFilial INT NOT NULL AUTO_INCREMENT,
  Nome VARCHAR(45) NOT NULL,
  CodPJ VARCHAR(14) NOT NULL,
  PRIMARY KEY (CodFilial),
    FOREIGN KEY (CodPJ)
    REFERENCES PESSOA_JURIDICA(Cnpj)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE FUNCIONARIO (
  CodFunc INT NOT NULL auto_increment,
  Salario DOUBLE NOT NULL,
  SUPERIOR INT NULL,
  Filial INT NOT NULL,
  Funcao VARCHAR(30) NOT NULL,
  Departamento VARCHAR(50) NOT NULL,
  PESSOA_FISICA VARCHAR(11) NOT NULL,
  PRIMARY KEY (CodFunc),
	FOREIGN KEY (SUPERIOR)
    REFERENCES FUNCIONARIO(CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
	FOREIGN KEY (PESSOA_FISICA)
    REFERENCES PESSOA_FISICA (CPF)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Filial)
    REFERENCES Filial (CodFilial)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
    
CREATE TABLE NOTA_FISCAL (
  NumeroNota INT  NOT NULL AUTO_INCREMENT,
  Emissor INT NOT NULL,
  Receptor INT NOT NULL,
  ValorNF FLOAT NOT NULL,
  Data_NOTA DATE NOT NULL,
  Tipo int(1) CHECK(TIPO >-1 AND TIPO < 2) NOT NULL,
  PRIMARY KEY (NumeroNota),
    FOREIGN KEY (Emissor)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Receptor)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE VENDA_VEICULO (
  codigoVendaV INT  NOT NULL AUTO_INCREMENT,
  NotaFiscal INT  NOT NULL,
  Quantidade INT NULL,
  ATIVO VARCHAR(45) NULL,
  ValorTotal DOUBLE NOT NULL,
  Funcionario INT NOT NULL,
  Pessoa_CodPessoa INT NOT NULL,
  PRIMARY KEY (codigoVendaV),
    FOREIGN KEY (NotaFiscal)
    REFERENCES NOTA_FISCAL (NumeroNota)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Funcionario)
    REFERENCES Funcionario (CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Pessoa_CodPessoa)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE COMPRA_VEICULO (
  CodigoCompraV INT  NOT NULL AUTO_INCREMENT,
  NotaFiscal INT  NOT NULL,
  Quantidade INT NOT NULL,
  ATIVO VARCHAR(45) NULL,
  ValorTotal DOUBLE NOT NULL,
  Funcionario int NOT NULL,
  Pessoa_CodPessoa INT NOT NULL,
  PRIMARY KEY (CodigoCompraV),
    FOREIGN KEY (NotaFiscal)
    REFERENCES NOTA_FISCAL (NumeroNota)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Funcionario)
    REFERENCES Funcionario (CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Pessoa_CodPessoa)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
    
CREATE TABLE VENDA_PECAS (
  CodigoVendaP INT NOT NULL AUTO_INCREMENT,
  NotaFiscal INT  NOT NULL,
  ATIVO VARCHAR(45) NULL,
  ValorTotal DOUBLE,
  Funcionario INT NOT NULL,
  Pessoa_CodPessoa INT NOT NULL,
  PRIMARY KEY (CodigoVendaP),
    FOREIGN KEY (NotaFiscal)
    REFERENCES NOTA_FISCAL (NumeroNota)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Funcionario)
    REFERENCES Funcionario (CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Pessoa_CodPessoa)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE PECA (
  CodigoPeca INT NOT NULL AUTO_INCREMENT,
  Descricao VARCHAR(45) NOT NULL,
  Modelo INT,
  Estoque INT NOT NULL,
  ValorUnitario DOUBLE NOT NULL,
  PRIMARY KEY (CodigoPeca),
    FOREIGN KEY (Modelo)
    REFERENCES Modelo (CodModelo)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE COMPRA_PECAS (
  CodigoCompraP INT NOT NULL AUTO_INCREMENT,
  NotaFiscal INT  NOT NULL,
  Quantidade INT NULL,
   ATIVO VARCHAR(45) NOT NULL,
  ValorTotal DOUBLE NOT NULL,
  Funcionario INT NOT NULL,
  Pessoa_CodPessoa INT NOT NULL,
  PRIMARY KEY (CodigoCompraP),
    FOREIGN KEY (NotaFiscal)
    REFERENCES NOTA_FISCAL (NumeroNota)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Funcionario)
    REFERENCES Funcionario (CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Pessoa_CodPessoa)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE ORDEM_SERVICO (
  CodOS INT NOT NULL AUTO_INCREMENT,
  Data_OS DATE NOT NULL,
  ValorTotal DOUBLE NOT NULL,
  DataEntrega DATE NOT NULL,
  Funcionario INT NOT NULL,
  Pessoa_CodPessoa INT NOT NULL,
  PRIMARY KEY (CodOS),
    FOREIGN KEY (Funcionario)
    REFERENCES Funcionario (CodFunc)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Pessoa_CodPessoa)
    REFERENCES Pessoa (CodPessoa)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE  ITENS_VENDA(
  CodItensVenda INT NOT NULL AUTO_INCREMENT,
  quantidade_itens INT NULL NOT NULL,
  valor_total_item DOUBLE NOT NULL,
  Peca_CodigoPeca INT ,
  Veiculo_CodVeiculo INT ,
  VendaVeiculo_codigoVendaV INT,
  VENDA_PECAS_CodigoVendaP INT,
  Ordem_Servico_CodOS INT,
  PRIMARY KEY (CodItensVenda),
    FOREIGN KEY (Peca_CodigoPeca)
    REFERENCES Peca (CodigoPeca)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Veiculo_CodVeiculo)
    REFERENCES Veiculo (CodVeiculo)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (VendaVeiculo_codigoVendaV)
    REFERENCES VENDA_VEICULO (codigoVendaV)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (VENDA_PECAS_CodigoVendaP)
    REFERENCES VENDA_PECAS (CodigoVendaP)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Ordem_Servico_CodOS)
    REFERENCES Ordem_Servico (CodOS)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE  ITENS_COMPRA (
  CodItensCompra INT NOT NULL AUTO_INCREMENT,
  quantidade_itens INT NOT NULL,
  valor_total_item DOUBLE NOT NULL,
  Peca_CodigoPeca INT NOT NULL,
  Veiculo_CodVeiculo INT NOT NULL,
  COMPRA_VEICULO_CodigoCompraV INT NOT NULL,
  COMPRA_PECAS_CodigoCompraP INT NOT NULL,
  PRIMARY KEY (CodItensCompra),
    FOREIGN KEY (Peca_CodigoPeca)
    REFERENCES Peca (CodigoPeca)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Veiculo_CodVeiculo)
    REFERENCES Veiculo (CodVeiculo)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (COMPRA_VEICULO_CodigoCompraV)
    REFERENCES COMPRA_VEICULO (CodigoCompraV)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (COMPRA_PECAS_CodigoCompraP)
    REFERENCES COMPRA_PECAS (CodigoCompraP)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

CREATE TABLE  SERVICOS (
  CodServicos INT AUTO_INCREMENT NOT NULL,
  Descricao VARCHAR(45) NOT NULL,
  TempoPadrao DOUBLE NOT NULL,
  ValorPadrao DOUBLE NOT NULL,
  PRIMARY KEY (CodServicos));

CREATE TABLE  ITENS_SERVICOS (
  IdItens_Servicos INT NOT NULL AUTO_INCREMENT,
  TempoServico DOUBLE NOT NULL,
  Ordem_Servico_CodOS INT NOT NULL,
  ValorTempo DOUBLE NOT NULL,
  Servicos_CodServicos INT NOT NULL,
  PRIMARY KEY (IdItens_Servicos),
    FOREIGN KEY (Ordem_Servico_CodOS)
    REFERENCES Ordem_Servico (CodOS)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (Servicos_CodServicos)
    REFERENCES Servicos (CodServicos)
    ON DELETE CASCADE
    ON UPDATE CASCADE);
/*
CRIANDO AS ASSERTIONS
Professor, criamos as assertions do jeito que tava no exmplo do Slide, mas o workbench não aceita esse tipo
de criação.

CREATE ASSERTION RESTRICAO_SALARIAL
CHECK ( NOT EXISTS
	  (SELECT *
      FROM FUNCIONARIO F, FUNCIONARIO G
      WHERE F.SALARIO > G.SALARIO
      AND F.SUPERIOR = G.CodFunc));
*/
/*
CRIANDO AS TRIGGERS
*/

DELIMITER $$
USE concessionaria$$
CREATE DEFINER=root@localhost TRIGGER venda_pecas_Tgr AFTER UPDATE ON venda_pecas FOR EACH ROW BEGIN
	UPDATE peca SET estoque = estoque - (SELECT quantidade_itens 
				FROM itens_venda
                WHERE itens_venda.VENDA_PECAS_CodigoVendaP = 1)
		WHERE CodigoPeca = (SELECT Peca_CodigoPeca 
				FROM itens_venda
                WHERE itens_venda.VENDA_PECAS_CodigoVendaP = 1);

END$$
DELIMITER ;

/*
PREENCHENDO O BANCO. 
PREENCHENDO ENDEREÇOS:
*/
iNSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES ('PE', 'RUA FREI CANEQUINHA', 'RECIFE', 'MADALENA', 33, NULL);
iNSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES ('PE', 'RUA FREI MIGUELINO', 'RECIFE', 'MADALENA', 66, NULL);
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('SP', 'RUA NÃO SEI', 'SÃO PAULO', 'VILA MARIANA', 67, NULL);
iNSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES ('PE', 'EXEMPLIFICADA', 'RECIFE', 'AFLITOS', 74, 'B');
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('PE', 'SEI LA', 'OLINDA', 'RIO DOCE', 88, NULL);
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('PE', 'RUA LAGOA DOS GATOS', 'PAULISTA', 'JANGA', 12, 'A');
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('PE', 'RUA ALGUMA POR AI', 'PAULISTA', 'JANGA', 47, 'C');
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('PE', 'RUA FERNANDO TOMAS', 'RECIFE', 'IBURA', 508, NULL);
INSERT INTO ENDERECO(ESTADO, LOGRADOURO,CIDADE,BAIRRO,NUMERO,COMPLEMENTO) VALUES('PE', 'RUA PROFESSOR HUMBERTO', 'VITÓRIA', 'BELLA VISTA', 650, 'AP 102');
/*
PREENCHENDO PESSOAS
*/
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('GABRIEL', 0, '(81) 98774-3243', 'emailexemplo1@gmail.com', 1);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('YAN', 0, '(81) 99876-5432', 'emailexemplo2@gmail.com', 4);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('ALAN', 0, '(81) 98899-7766', 'emailexemplo3@gmail.com', 3);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('EMPRESA TESTE', 1, '(19) 98712-3456', 'emailexemplo4@hmail.com', 2);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('EMPRESA SECUNDARIA', 1, '(19) 34342318', 'emailexemplo5@hmail.com', 5);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('DAIVID', 0, '(81) 98899-6677', 'emailexemplo6@gmail.com', 6);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('MARCOS', 0, '(81) 99988-7766', 'emailexemplo7@gmail.com', 7);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('EMORESA_3', 1, '(81) 3435-8754', 'emailexemplo8@gmail.com', 8);
INSERT INTO PESSOA(NOME,TIPO,TELEFONE,EMAIL,ENDERECO) VALUES('EMPRESA_4', 1, '(81) 3425-6987', 'emailexemplo7@gmail.com', 9);
/*
PREENCHENDO PESSOAS FISICAS
*/
INSERT INTO PESSOA_FISICA VALUES('12308326450','9100223', '2000-01-22' ,1);
INSERT INTO PESSOA_FISICA VALUES('22254689710','2014568', '1995-05-12' ,2);
INSERT INTO PESSOA_FISICA VALUES('45896312547','8100322', '1987-10-08' ,3);
INSERT INTO PESSOA_FISICA VALUES('12306525430','9711547', '1999-07-26' ,6);
INSERT INTO PESSOA_FISICA VALUES('00123641250','4000365', '2000-02-04' ,7);
/*
PREENCHENDO PESSOAS JURÍDICAS
*/
INSERT INTO PESSOA_JURIDICA VALUES('20647732000185', 'EMPRESA1','388108598269', 4);
INSERT INTO PESSOA_JURIDICA VALUES('12345678985231', 'EMPRESA2','789654123002', 5);
INSERT INTO PESSOA_JURIDICA VALUES('87563217894522', 'EMPRESA3', '65231478965', 8);
INSERT INTO PESSOA_JURIDICA VALUES('23548854255254', 'EMPRESA4', '54712369847', 9);
/*
PREENCHENDO MODELOS
*/
INSERT INTO MODELO(DETALHES,FAMILIA,COMBUSTIVEL,COR) VALUES('1.8 19/20','COROLLA','FLEX','BRANCO');
INSERT INTO MODELO(DETALHES,FAMILIA,COMBUSTIVEL,COR) VALUES('1.8 20/20','COROLLA','GASOLINA','CINZA');
INSERT INTO MODELO(DETALHES,FAMILIA,COMBUSTIVEL,COR) VALUES('1.6 19/20','TUCSON','ALCOOL','PRETO');
INSERT INTO MODELO(DETALHES,FAMILIA,COMBUSTIVEL,COR) VALUES('2.0 19/20','DUSTER','FLEX','BRANCO');
INSERT INTO MODELO(DETALHES,FAMILIA,COMBUSTIVEL,COR) VALUES('3.0 19/20','RANGE ROVER','GASOLINA','PRETO');
/*
PREENCHENDO VEICULOS
*/
INSERT INTO VEICULO(CHASSI,PLACA,MODELO,PROPRIETARIO,VALOR) VALUES('9UK64ED50D0015277','CQC2121', 1, NULL, 12000);
INSERT INTO VEICULO(CHASSI,PLACA,MODELO,PROPRIETARIO,VALOR) VALUES('9UK64ED50D0015280','VCC8754', 2, NULL, 12000);
INSERT INTO VEICULO(CHASSI,PLACA,MODELO,PROPRIETARIO,VALOR) VALUES('9UK64ED50D0015294','LFS9834', 3, NULL, 80000);
INSERT INTO VEICULO(CHASSI,PLACA,MODELO,PROPRIETARIO,VALOR) VALUES('9UK64ED50D0015313','LFS9834', 4, NULL, 75000);
INSERT INTO VEICULO(CHASSI,PLACA,MODELO,PROPRIETARIO,VALOR) VALUES('9UK64ED50D0015327','FFF3698', 5, NULL, 300000);
/*
PREENCHENDO FILIAIS
*/
INSERT INTO FILIAL(NOME,CODPJ) VALUES('OLINDA','12345678985231' );
INSERT INTO FILIAL(NOME,CODPJ) VALUES('RECIFE','87563217894522');
/*
PREENCHENDO FUNCIONARIO
*/
INSERT INTO FUNCIONARIO(SALARIO, SUPERIOR,FILIAL,FUNCAO,DEPARTAMENTO,PESSOA_FISICA) VALUES(7000,NULL,1,'GERENTE','VENDAS','12308326450');
INSERT INTO FUNCIONARIO(SALARIO, SUPERIOR,FILIAL,FUNCAO,DEPARTAMENTO,PESSOA_FISICA) VALUES(3000,1,1,'VENDEDOR','VENDAS','22254689710');
INSERT INTO FUNCIONARIO(SALARIO, SUPERIOR,FILIAL,FUNCAO,DEPARTAMENTO,PESSOA_FISICA) VALUES(7000,NULL,2,'GERENTE','SERVIÇOS','45896312547');
INSERT INTO FUNCIONARIO(SALARIO, SUPERIOR,FILIAL,FUNCAO,DEPARTAMENTO,PESSOA_FISICA) VALUES(3000,3,2,'MECÂNICO','SERVIÇOS','12306525430');
/*
PREENCHENDO SERVICOS
*/
INSERT INTO SERVICOS(DESCRICAO,TEMPOPADRAO,VALORPADRAO) VALUES('REVISÃO DO VEICULO',3,300.00);
/*
CRIANDO ORDEM SERVIÇO
*/
INSERT INTO ORDEM_SERVICO(DATA_OS, VALORTOTAL,DATAENTREGA,FUNCIONARIO,PESSOA_CODPESSOA) VALUES(curdate(), 50000, curdate(),3,7);
/*
PREENCHENDO ITENS_SERVICOS
*/
INSERT INTO ITENS_SERVICOS(TEMPOSERVICO,Ordem_Servico_CodOS,VALORTEMPO,Servicos_CodServicos) VALUES (3,1,100.00,1);
/*
CRIANDO NOTA FISCAL
*/
INSERT INTO NOTA_FISCAL(EMISSOR, RECEPTOR, VALORNF, DATA_NOTA, TIPO) VALUES(8,7, 50.00, curdate(), 0);
INSERT INTO NOTA_FISCAL(EMISSOR, RECEPTOR, VALORNF, DATA_NOTA, TIPO) VALUES(8,4, 120000.00, curdate(), 0);
INSERT INTO NOTA_FISCAL(EMISSOR, RECEPTOR, VALORNF, DATA_NOTA, TIPO) VALUES(8,4, 80000.00, curdate(), 0);
INSERT INTO NOTA_FISCAL(EMISSOR, RECEPTOR, VALORNF, DATA_NOTA, TIPO) VALUES(8,4, 60000.00, curdate(), 0);
/*
PREENCHENDO VENDA DE VEICULO
*/
INSERT INTO VENDA_VEICULO(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(2,1,'S',120000.00,3,4);
INSERT INTO VENDA_VEICULO(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(3,1,'S',80000.00,2,4);
INSERT INTO VENDA_VEICULO(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(4,1,'S',60000.00,3,4);
/*
PREENCHENDO PECAS
*/
INSERT INTO PECA(DESCRICAO, MODELO, ESTOQUE, VALORUNITARIO) VALUES('CORREIA', NULL, 5, 50.00);
INSERT INTO PECA(DESCRICAO, MODELO, ESTOQUE, VALORUNITARIO) VALUES('PARAFUDSO COROLLA', 1, 4, 3.00);
INSERT INTO PECA(DESCRICAO, MODELO, ESTOQUE, VALORUNITARIO) VALUES('CÂMERA DE RÉ', NULL, 10, 200.00);
INSERT INTO PECA(DESCRICAO, MODELO, ESTOQUE, VALORUNITARIO) VALUES('FUMÊ', NULL, 6, 300.00);
/*
PREENCHENDO VENDA DE PECAfuncionario
*/
INSERT INTO VENDA_PECAS(NOTAFISCAL, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(1, 'N',50.00, 1,7);
/*
CRIANDO ITENS_VENDA
*/
INSERT INTO ITENS_VENDA(QUANTIDADE_ITENS,VALOR_TOTAL_ITEM,PECA_CODIGOPECA,VEICULO_CODVEICULO,VendaVeiculo_codigoVendaV,VENDA_PECAS_CodigoVendaP,Ordem_Servico_CodOS) VALUES (3,50.00,1,NULL,NULL,1, NULL);
INSERT INTO ITENS_VENDA(QUANTIDADE_ITENS,VALOR_TOTAL_ITEM,PECA_CODIGOPECA,VEICULO_CODVEICULO,VendaVeiculo_codigoVendaV,VENDA_PECAS_CodigoVendaP,Ordem_Servico_CodOS) VALUES(1,12000.00,NULL,2,1, NULL, NULL);

INSERT INTO COMPRA_PECAS(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(1, 1, 'N', 50.00, 1, 3);
INSERT INTO COMPRA_PECAS(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(2, 1, 'A', 20.00, 1, 1);
INSERT INTO COMPRA_PECAS(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(1, 2, 'A', 300.00, 1, 2);
INSERT INTO COMPRA_PECAS(NOTAFISCAL, QUANTIDADE, ATIVO, VALORTOTAL, FUNCIONARIO, PESSOA_CODPESSOA) VALUES(1, 4, 'N', 55.00, 1, 1);

#SELECT * FROM PECA;
#update VENDA_PECAS SET ATIVO = 'S' WHERE CODIGOVENDAP = 1;
#SELECT * FROM PECA;

/*
CRIANDO VIEW
*/
#DROP VIEW IF EXISTS  FaturamentoTotal;

CREATE VIEW FaturamentoTotal 	
 AS SELECT SUM(ValorNF) as Faturamento,  (SELECT Nome
    FROM PESSOA, FUNCIONARIO
    WHERE CodPessoa = Funcionario
    group by Nome) as funcionario, count(Funcionario) as Vendas
	FROM  VENDA_VEICULO, NOTA_FISCAL									
	WHERE NumeroNota = NotaFiscal AND Data_Nota BETWEEN 20191201 and 20191230
    GROUP BY Funcionario
    ORDER BY Vendas desc, Funcionario desc
	#LIMIT 1
;
    
#SELECT * FROM faturamentototal;    
    